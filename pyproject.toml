[tool.poetry]
name = "kwait"
version = "0.0.2"
description = "Intelligently wait for all resources in a Kubernetes manifest to be 'ready,' whatever that means"
authors = ["Pipe IntSys <eng-group-intsys@pipe.com>"]
readme = "README.md"
packages = [{ include = "kwait" }]

[tool.poetry.dependencies]
python = "^3.9" # TODO broaden this
click = "~8.1.7"
kubernetes = "~29.0.0"
ruamel-yaml = "~0.18.6"
stevedore = "~5.1.0"
tabulate = "~0.9.0"

[tool.poetry.group.dev.dependencies]
black = "~24.3.0"
faker = "~22.5.1"
isort = "~5.13.2"
pylint = "~3.1.0"
pyright = "~1.1.348"
pytest = "~7.4.4"
pytest-cov = "~4.1.0"

[tool.poetry.scripts]
kwait = "kwait.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins."kwait.drivers"]
daemonset = "kwait.drivers:DaemonSet"
deployment = "kwait.drivers:Deployment"
persistentvolumeclaim = "kwait.drivers:PersistentVolumeClaim"
pod = "kwait.drivers:Pod"
poddisruptionbudget = "kwait.drivers:PodDisruptionBudget"
replicaset = "kwait.drivers:ReplicaSet"
replicationcontroller = "kwait.drivers:ReplicationController"
service = "kwait.drivers:Service"
statefulset = "kwait.drivers:StatefulSet"

[tool.pyright]
reportPrivateImportUsage = "none"
# the kubernetes client doesn't provide type hints
# (https://github.com/kubernetes-client/python/issues/225), and I
# couldn't get any of the third-party stub packages (e.g.,
# https://pypi.org/project/kubernetes-stubs-elephant-fork/) to work.
ignore = ["kwait/drivers.py", "test/test_drivers.py"]
include = ["kwait", "test"]

[tool.pytest.ini_options]
addopts = "-ra --cov kwait --cov-report term-missing"

[tool.pylint.main]
jobs = 4
recursive = true
load-plugins = """
    pylint.extensions.broad_try_clause,
    pylint.extensions.code_style,
    pylint.extensions.comparison_placement,
    pylint.extensions.confusing_elif,
    pylint.extensions.for_any_all,
    pylint.extensions.dict_init_mutate,
    pylint.extensions.docparams,
    pylint.extensions.dunder,
    pylint.extensions.check_elif,
    pylint.extensions.eq_without_hash,
    pylint.extensions.private_import,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.no_self_use,
    pylint.extensions.overlapping_exceptions,
    pylint.extensions.redefined_loop_name,
    pylint.extensions.typing,
    """

[tool.pylint.basic]
good-names = "i,_,rv"
function-rgx = "([a-z_][a-z0-9_]{2,40}|test_[a-z_][a-z0-9_]{2,64})$"
method-rgx = "([a-z_][a-z0-9_]{2,40}|test_[a-z_][a-z0-9_]{2,64})$"
const-rgx = "([A-Z_][A-Z0-9_]*|__.*__)$"

[tool.pylint.'messages control']
disable = """
    fixme,
    line-too-long,
    method-cache-max-size-none,
    too-few-public-methods,
    too-many-arguments,
    too-many-branches,
    too-many-locals,
    too-many-return-statements,
    too-many-statements,
    too-many-try-statements,
    ungrouped-imports,
    use-implicit-booleaness-not-comparison,
    wrong-import-order,
    """

[tool.isort]
profile = "black"
multi_line_output = 3
use_parentheses = true
force_single_line = true
force_sort_within_sections = true
